v1
sum( v1%%2==0 )
v1[v1%%2==1 | v1>80]
v1[ v1%%3==0 & v1%%5==0 ]
v1 <- 51:90
v1[ v1%%3==0 & v1%%5==0 ]
v1[v1%%2==0]*2
v1[ v1%%7!=0]
my.info
my.info <- list(name='Tom', age='60', status=TRUE, score=ds)
my.info <- list(name="Tom", age="60", status=TRUE, score=ds)
ds <- c(90,85,70,84)
my.info <- list(name="Tom", age="60", status=TRUE, score=ds)
ds <- c(90,85,70,84)
my.info <- list(name="Tom", age="60", status=TRUE, score=ds)
my.info
my.info[[1]]
my.info <- list(name="Tom", age=60, status=TRUE, score=ds)
my.info <- list(name="Tom", age=60, status=TRUE, score=ds)
my.info[1]
my.info[2]
my.info <- list(name="Tom", age=60, status=TRUE, score=ds)
my.info
my.info$score
my.info$status
my.info[[3]]
bt.new <- factor(bt)
bt <- c('A','B','B','O','AB')
bt.new <- factor(bt)
factor(bt)
bt.new[5]
bt.new[1:3]
bt.new[-2]
levels(bt.new)
as.integer(bt.new)
bt.new[6] <- 'A'
bt.new[7 <- 'o'
bt.new[7] <- 'o'
bt.new[7] <- 'o'
bt.new[7] <- 'O'
bt.new[8] <- 'C'
levels(nn.new)
levels(nn.new)
nn <- c('동','서','남','북','북','북')
nn.new <- factor(nn)
levels(nn.new)
nn <- c('동','서','남','북','북','북')
as.i
as.integer(nn)
as.integer(nn.new)
nn.new[8] <- 'north'
people <- c(name,age,gender,student,day)
people <- c('Bill','20','M','TRUE','Mon,Wed')
name(people) <- c('name','age','gender','student','day')
people <- c('Bill','20','M','TRUE','Mon,Wed')
names(people) <- c('name','age','gender','student','day')
people
day <- c('Mon','Wed')
people <- list(name='Bill',age='20',gender='M',student='TRUE',day='day')
people
a <- 4
b <- 5
c <- a+b
c
x1 <- 6
x2 <- 8
x3 <- 10
y=2*2+5*x1+10
x1 <- 6
x2 <- 8
x3 <- 10
y1=2*2+5*x1+10
y1
y2=2*2+5*x2+10
y2
x1 <- 6
x2 <- 8
x3 <- 10
y1=2*2+5*x1+10
y1
y2=2*2+5*x2+10
y2
y3=2*2+5*x3+10
y3
sum.ab
val.a <- 10
val.b <- 20
sum.ab <- val.a +val.b
sum.ab
z
z <- Matrix(1:30, nrow=5, ncol=6)
z <- Matrix(1:30, nrow=5, ncol=6)
z <- Matrix(1:30, nrow=5, ncol=6)
z <- Matrix(100:200, nrow=10, ncol=10)
z <- Matrix(100:200, nrow=10, ncol=10)
z <- Matrix(1:30, nrow=5, ncol=6)
z <- Matrix(1:30, nrow=5, ncol=6)
z <- Matrix(1:30, nrow = 5, ncol = 6)
z <- Matrix(100:200, nrow=10, ncol=10)
z <- Matrix(1:30, nrow = 5, ncol = 6 byrow = T)
z <- Matrix(1:30, nrow = 5, ncol = 6, byrow = T)
source("D:/ai/study/r_study/임03.메트릭스와 데이터프레임.R")
z <- Matrix(1:30, nrow = 5, ncol = 6, byrow = T)
z <- Matrix(100:200, nrow=10, ncol=10)
sum.xy <- cbind(x,y)
x <- 1:5
y <- 8:12
sum.xy <- cbind(x,y)
x <- 1:5
y <- 8:12
sum.xy <- cbind(x,y)
sum.xy
sum.xy <- rbind(x,y)
sum.xy
x=1:5
y=101:105
z=201:205
sum.xyz <- cbind(x,y,z)
sum.xyz
x=1:5
y=101:105
z=201:205
sum.xyz <- rbind(x,y,z)
sum.xyz
z1 <- matrix(12:1, nrow3, ncol = 4 byrow = T)
z <- matrix(12:1, nrow3, ncol = 4 byrow = T)
z <- matrix(12:1, nrow3, ncol = 4, byrow = T)
z <- Matrix(1:30, nrow = 5, ncol = 6, byrow = T)
z <- matrix(12:1, nrow3, ncol = 4, byrow=T)
z <- matrix(12:1, nrow=3, ncol = 4, byrow=T)
z <- matrix(12:1, nrow=3, ncol = 4, byrow=T)
z
rownames(z) <- c('v1','v2','v3')
rownames(z) <- c('v1','v2','v3')
z
z1 <- rbind(v1,v2,v3)
v1 <- c(12:9)
v2 <- c(8:5)
v3 <- c(4:1)
z1 <- rbind(v1,v2,v3)
z1
z <- Matrix(1:30, nrow = 5, ncol = 6, byrow = T)
z <- matrix(1:30, nrow = 5, ncol = 6, byrow = T)
z <- matrix(100:200, nrow=10, ncol=10)
#5를 검색하기
z1[2,4]
z1[3,2]
z <- matrix(1:30, nrow = 5, ncol = 6, byrow = T)
z
z <- matrix(100:200, nrow=10, ncol=10)
z
v1 <- c(12:9)
v2 <- c(8:5)
v3 <- c(4:1)
z1 <- rbind(v1,v2,v3)
z1
z1[1,]
#2열
z1[,2]
#1,3행
z1[c(1,3),]
#2,4열
z1[,c(2,4)]
#2~4열
z1[,c(2:4)]
#행 이름주기
#열 이름주기
score <- matrix(c(90,85,78,85,96,49,95, 90,80,70,60), nrow=4, ncol=3)
#행 이름주기
#열 이름주기
score <- matrix(c(90,85,69,78,85,96,49,95, 90,80,70,60), nrow=4, ncol=3)
rownames(score) <- c('John', 'Tom', 'Mark', 'Jane')
colnames(score) <- c('English','Math','Science')
score
score[2,2]
score[4,3]
score['jane','science']
score['Jane','Science']
score['Jane','English']
#Tom의 점수 검색
score[Tom,]
#Tom의 점수 검색
score['Tom',]
#Math
score[,'Math']
#Math의 평균
mean( score[,'Math'] )
#학생의 이름
rownames(score)
#과목명은
colnames(score)
#2번째 학생
rownames(score[2])
#2번째 학생
rownames(score[,2])
#2번째 학생
rownames(score)[2]
#세번째과목
colnames(score)[3]
z <- matrix(c(12:1), nrow=4, ncol=3)
rownames(v1,v2,v3)
rownames('v1','v2','v3')
rownames(c('v1','v2','v3')
z
z <- matrix(c(12:1), nrow=4, ncol=3)
rownames(c('v1','v2','v3')
z
z
rownames(z)(c('v1','v2','v3')
z
z <- matrix(c(12:1), nrow=4, ncol=3)
rownames(z)(c('v1','v2','v3')
z
rownames(z) <-  c('v1','v2','v3')
colnames(z) <- c('v1','v2','v3')
z
rownames(z) <- c('v1','v2','v3')
z <- matrix(c(12:1), nrow=3, ncol=4)
rownames(z) <- c('v1','v2','v3')
z
z <- matrix(c(12,11,10,9, 8,7,6,5, 4,3,2,1), nrow=3, ncol=4)
z
rownames(z) <- c('v1','v2','v3')
z
score
z <- matrix(c(12,8,4, 11, 7, 3, 10,6,2, 9,5,1), nrow=3, ncol=4)
z
rownames(z) <- c('v1','v2','v3')
z <- matrix(c(12,8,4, 11, 7, 3, 10,6,2, 9,5,1), nrow=3, ncol=4)
rownames(z) <- c('v1','v2','v3')
z
z <- matrix(12:1, nrow=3, ncol=4, byrow = T)
z
rownames(z) <- c('v1','v2','v3')
z
z
z <- rbind(z,v4)
v4 <- c(1,3,5,7)
z <- rbind(z,v4)
z
z[2:4, c('a1', 'a3')]
z
colnames(z)[3]
rownames(z)[3]
colnames(z)[3]
rownames(z)[3]
z
colnames(z)[3]
z
city <- c('서울','도쿄','워싱턴')
rank <- c(1,2,3)
etc <- c(TRUE,TRUE,FALSE)
city.info <- data.frame(city,rank,etc)
city.info
#도쿄
city.info[2,1]
city.info[2,"city"]
city.info[1,"rank"]
rownames(city.info)
colnames(city.info)
iris
head(iris)
tail(iris)
head(iris, n=10)
head( iris[, c(1:2)]
head( iris[, c(1:2)])
head( iris[, c(1:2)])
head( iris[,'Petral.width'])
head( iris[,'Petal.width'])
head( iris[,'Petal.width'])
head( iris[,'Petal.width'])
dim(iris)
str(iris)
iris[,5]
iris
iris[,5]
unique(iris[,5])
table(iris[,'species'])
table(iris[,"species"])
table(iris[,"species"])
table(iris[,"species"])
table(iris[,"species"])
colSums(iris)
colSums(iris)
colSums(iris[,])
colSums(iris[,-5])
colMeans(iris[,-5])
rowsums(iris[-5])
rowsums(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,"species"])
rowMeans(iris[,-5])
state.x77
st <- data.frame(state.x77)
st
st
rownames(st)
colnames(st)
dim(st)
str(st)
nrow(st)
ncol(st)
head(st)
head(st, n=10)
tail(st)
colSums(st)
rowSums(st)
st('Florida')
st(,'Florida')
st
table(st[, Florida])
table(st[, Florida])
table(st[Florida])
st['Florida',]
st[,'Income']
st['Texas','Area']
st['Ohio','Population', 'Income']
st['Ohio','Population']
st['Ohio',c('Population','Income')]
st['Population'>= 50000]
pop <- population
pop <- data.frame( population )
pop <- data.frame( Population )
pop <- data.frame( Population )
st['Population'>= 50000]
st['Population' >= 50000]
st['Population']
st['Population'] >=  >= 50000
st(['Population'] >=  >= 50000)
st(['Population'] >= 50000)
st('Population' >= 50000)
st['Population'] >= 50000
st['Population'] >= 5000
st['Population'] >= 5000
st[,'Population'] >= 5000
st['Population,'] >= 5000
city <- c('서울','도쿄','워싱턴')
city <- c('서울','도쿄','워싱턴')
city <- c('서울','도쿄','워싱턴')
rank <- c(1,2,3)
etc <- c(TRUE,TRUE,FALSE)
city.info <- data.frame(city,rank,etc)
city.info
t(city.info)
#인구수 5000이상
subset(st.Population >=5000)
#인구수 5000이상
subset(st, Population >=5000)
subset(st, Income >=4500)
table(st [,subset(st, Income >=4500) ])
table(st [, subset(st, Income >=4500) ])
nows(st [, subset(st, Income >=4500) ])
nows([, subset(st, Income >=4500) ])
nows( subset(st, Income >=4500) )
nows( st(subset(st, Income >=4500)) )
subset(st, Income >=4500)
subset(st, 'Income' >=4500)
subset(st, 'Income' >=4500) [, c('Population','Income','Area')]
#인구수 5000이상
subset(st, 'Population' >=5000)
nrow( subset(st, 'Income' >=4500)  )
nrow( subset(st, 'Income' >=4500)  )
subset(st, 'Area' >=100000 & 'Frost' >= 120)
nrow( subset(st, Income >=4500)  )
subset(st, Income >=4500) [, c('Population','Income','Area')]
subset(st, Population <2000 & Murder <12)
mean( subset(st, Illiertacy>=2.0))[, 'Income']
mean( subset(st, Illiertacy >= 2.0))[, 'Income']
mean( subset(st, Illiertacy >= 2.0))[, 'Income']
ill.up2 <- mean(subset(st, Illiteracy)<2.0)[, 'Income']
ill.up2
abs(ill.up2 - ill.down2)
max(st, 'Life.Exp')
max(st [, 'Life.Exp'])
subset(st, Life.Exp == max(st [, 'Life.Exp']))
rownames( subset(st, Life.Exp == max(st [, 'Life.Exp'])) )
subset(st, Income > pen.Income)
pen.Income <- st['Pennstlvania', 'Income' ]
subset(st, Income > pen.Income)
rownames(subset(st, Income > pen.Income))
a <- matrix(1:20, 4,5)
a
b <- matrix(21:40, 4,5)
b
2*a
b-5
a+b
b/a
a*b
class(iris)
calss(stage.x77)
calss(state.x77)
calss(state.x77)
class(state.x77)
class(islands)
class(lh)
is.matrix(iris)
is.matrix(iris)
is.data.frame(iris)
#matrix -> 데이터프래임셋
st <- data.frame(state.x77)
class(st)
calss(iris)
as.iM <- as.matrix(iris)
class(as.iM)
class(iris)
iris
#열 추출하기
iris[, 'Species']
head(state.x77)
state.x77[, 'Area']
iris [ ,5]
state.x77[, 'Area']
state.x77[, 8]
iris [ ,5]
iris [ ,5]
state.x77[, 8]
state.x77[, 'Area']
iris['']
iris['Species']
iris['!Species']
iris[!'Species']
iris['Species']
state.x77['Area']
iris[5]
state.x77[8]
iris$Species
state.x77$Area
human.Info <- data.frame(name, age, gender, height, student)
name <- c('Tom','Jane','Nick')
age <- c(20,23,26)
gender <- c('M','F','M')
height <- c(180,160,170)
student <- c(TRUE, TRUE, FALSE)
human.Info <- data.frame(name, age, gender, height, student)
human.Info
class([, ])
class( human.Info[, ])
class( human.Info[, 1 ])
class( human.Info[1 , ])
class( human.Info[, 1])
class( human.Info[1 ,])
human
class((human.Info)[1])
mean(height)
means(height)
mean(height)
mean(human.Info(height))
human.new <-list(name='Mary', age=24, gender='F', height=155, student=TRUE)
human.new <-list(name='Mary', age=24, gender='F', height=155, student=TRUE)
human <-  rbind(human, human.new)
human.new <-list(name='Mary', age=24, gender='F', height=155, student=TRUE)
human <-  rbind(human, human.new)
str(human)
human <- data.frame(name, age, gender, height, student)
human
human.new <-list(name='Mary', age=24, gender='F', height=155, student=TRUE)
human <-  rbind(human, human.new)
human
str(human)
dim(human)
human$age
mean( human$age )
human['age']
human[, 'age']
mean(human$height)
mean( human$height )
colnames(human[-4])
human[, 'age']
mean(human[, 'age'])
mean(human[, 'height'])
table(human)
table(human$gender)
swiss
dim(swiss)
head(sw)
head(swiss)
str(swiss)
air <- read.csv('airquality.csv')
setwd("D:\ai\study\r_study") #경로 세팅
setwd("D:\ai\study\r_study") #경로 세팅
setwd("D:/ai/study/r_study") #경로 세팅
air <- read.csv('airquality.csv')
setwd("D:/ai/study/r_study") #경로 세팅
air <- read.csv('airquality')
air
class(air)
air <- read.csv('D:/ai/study/r_study/airquality.csv')
air2 <- read.csv('D:/ai/study/r_study/airquality.csv')
air2
air2['Ozone']
air3 <- read.csv(file.choose(  ))
air3 <- read.csv(file.choose())
air3 <- read.csv(file.choose())
head(air3)
#저장하기
iris
subset(iris, Species=='setosa')
write.csv(iris.setosa, 'irisfilename.csv')
write.csv(iris.setosa, 'irisfilename.csv')
write.csv(iris.setosa, 'irisfilename.csv')
iris.setosa <- subset(iris, Species == 'setosa')
write.csv(iris.setosa, 'irisfilename.csv')
write.csv(iris.setosa, 'irisfilename.csv')
wirte.csv(iris.setosa, 'irisfile`.csv', row.names=F)
wirte.csv(iris.setosa, 'irisfile`.csv', row.names=F)
wirte.csv(iris.setosa, file.choose())
iris.setosa <- subset(iris, Species == 'setosa')
write.csv(iris.setosa, 'irisfilename.csv')
write.csv(iris.setosa, 'irisfilename.csv')
wirte.csv(iris.setosa, 'irisfile`.csv', row.names=F)
source("D:/ai/study/r_study/임03.메트릭스와 데이터프레임.R")
