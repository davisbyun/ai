/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-01-26 01:47:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLDecoder;
import java.net.URL;
import dao.ProductRepository;
import dto.Product;
import java.util.*;

public final class orderConfirmation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLDecoder");
    _jspx_imports_classes.add("dto.Product");
    _jspx_imports_classes.add("java.net.URL");
    _jspx_imports_classes.add("dao.ProductRepository");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>orderConfirmation.jsp 주문정보 페이지 영수증 보이기</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	 	request.setCharacterEncoding("utf-8");
		
		String cartId = session.getId();
		
		String vCartId = ""; 
		String vCartname ="";
		String vCartSD = "";
		String vCartCountry ="";
		String vCartZip = "";
		String vCartAN ="";
		
		//쿠키들을 배열에 담아서 가져오기
		Cookie[] c = request.getCookies();
		
		if(c != null ) {
			for(int i =0; i < c.length; i++ ) {
				Cookie t = c[i]; //쿠키배열의 0열에 있는 쿠키를 t변수에 담는다.
				String cn = t.getName(); //쿠키명을 얻는다. 
				if(cn.equals("scartId") ) vCartId = URLDecoder.decode(t.getValue(), "utf-8");
				if(cn.equals("scartname") ) vCartname = URLDecoder.decode(t.getValue(), "utf-8");
				if(cn.equals("scartSD") ) vCartSD = URLDecoder.decode(t.getValue(), "utf-8");
				if(cn.equals("scartCountry") ) vCartCountry = URLDecoder.decode(t.getValue(), "utf-8");
				if(cn.equals("scartZip") ) vCartZip = URLDecoder.decode(t.getValue(), "utf-8");
				if(cn.equals("scartAN") ) vCartAN = URLDecoder.decode(t.getValue(), "utf-8");
			}
		}
	
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu.jsp", out, false);
      out.write("\r\n");
      out.write(" <div class=\"jumbotron\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1 class=\"display-3\"> 주문정보 </h1> \r\n");
      out.write("    </div>\r\n");
      out.write(" </div>\r\n");
      out.write(" <div class=\"container col-8 alert alert-info \">\r\n");
      out.write("    <div class=\"text-center\">\r\n");
      out.write("      <h1> 영수증 </h1>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"row justify-content-between\">\r\n");
      out.write("      <div class=\"col-4\" align=\"left\">\r\n");
      out.write("      <strong> 배송 주소 </strong> <br>\r\n");
      out.write("      		   성명 : ");
      out.print( vCartname );
      out.write("<br>\r\n");
      out.write("      		   우편번호 : ");
      out.print( vCartZip );
      out.write("<br>\r\n");
      out.write("      		   주소 : ");
      out.print( vCartAN );
      out.write("<br>\r\n");
      out.write("      		   (");
      out.print( vCartCountry );
      out.write(")\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"col-4\" align=\"right\">\r\n");
      out.write("         <p> <em> 배송일</em> ");
      out.print( vCartSD );
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <table class=\"table table-hover\">\r\n");
      out.write("      <tr> <th class=\"text-center\"> 상품명 </th> <th class=\"text-center\"> 수량 </th> \r\n");
      out.write("           <th class=\"text-center\"> 소계 </th> <th class=\"text-center\"> 가격 </th> \r\n");
      out.write("      </tr>\r\n");
      out.write("           ");

      		 int sum = 0;
             ArrayList<Product> ct = (ArrayList<Product>) session.getAttribute("cartlist");
             if (ct == null){
            	 ct = new ArrayList<Product>();
             }
             for (int i =0; i < ct.size(); i++) {
				Product p = ct.get(i);
				int total = p.getQuantity()* p.getUnitPrice();
				sum = sum + total;
		
          
      out.write("	\r\n");
      out.write("	       <tr>\r\n");
      out.write("	       	 <td class=\"text-center\"> ");
      out.print( p.getPname() );
      out.write(" </td>\r\n");
      out.write("	       	 <td class=\"text-center\"> ");
      out.print( p.getQuantity() );
      out.write(" </td>\r\n");
      out.write("	       	 <td class=\"text-center\"> ");
      out.print( p.getUnitPrice() );
      out.write(" </td>\r\n");
      out.write("	       	 <td class=\"text-center\"> ");
      out.print( total );
      out.write("</td>\r\n");
      out.write("	       </tr>\r\n");
      out.write("	        		\r\n");
      out.write("          ");
	 
           }
          
      out.write("\r\n");
      out.write("           \r\n");
      out.write("          <tr> <td></td> <td></td> \r\n");
      out.write("          	   <td class=\"text-right text-primary\"> 총액 :  </td> \r\n");
      out.write("          	   <td class=\"text-center text-danger\"> ");
      out.print( sum );
      out.write("</td> </tr>\r\n");
      out.write("          	    \r\n");
      out.write("      </table>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div>\r\n");
      out.write("      	<a href=\"./shippingInfo.jsp?cartId=");
      out.print( cartId );
      out.write(" \" class=\"btn btn-info\" >배송정보로</a>\r\n");
      out.write("      	<a href=\"./thankCusomer.jsp\" class=\"btn btn-success\">주문완료</a>\r\n");
      out.write("      	<a href=\"./checkOutCancelled.jsp\" class=\"btn btn-danger\" >주문취소</a>\r\n");
      out.write("      </div>\r\n");
      out.write("     	\r\n");
      out.write("     	\r\n");
      out.write("   </div>\r\n");
      out.write("      	\r\n");
      out.write("   \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
