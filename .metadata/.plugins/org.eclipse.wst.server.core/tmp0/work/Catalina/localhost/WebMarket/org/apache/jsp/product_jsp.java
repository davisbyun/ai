/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-01-24 05:47:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dto.Product;
import dao.ProductRepository;

public final class product_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dto.Product");
    _jspx_imports_classes.add("dao.ProductRepository");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>상품목록</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./resources/css/bootstrap.min.css\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function addToCart() {\r\n");
      out.write("	   if( confirm(\"상품을 장바구니에 추가하시겠습니까?\") ) {\r\n");
      out.write("		   document.addForm.submit();\r\n");
      out.write("	  }else {\r\n");
      out.write("		   document.addForm.reset();\r\n");
      out.write("	  }\r\n");
      out.write("}	   \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu.jsp", out, false);
      out.write("\r\n");
      out.write("  <div class=\"jumbotron\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1 class=\"display-3\"> 상품 정보 </h1> \r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  \r\n");
      out.write("  ");
      dao.ProductRepository pr = null;
      pr = (dao.ProductRepository) _jspx_page_context.getAttribute("pr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (pr == null){
        pr = new dao.ProductRepository();
        _jspx_page_context.setAttribute("pr", pr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("	  ");

	  //상품아이디받기
	  String prodId = request.getParameter("id");
	  
	  ProductRepository dao = ProductRepository.getInstance(); //7장에서 새로추가
	  //자바로 상품아이디에 해당하는 객체의 주소를 찾아온다. 
	  Product p = dao.getProductById(prodId); 
	  
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("  	<div class=\"row\" >\r\n");
      out.write("  	<div class=col-md-5>\r\n");
      out.write("  		<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/images/");
      out.print(p.getFilename() );
      out.write("\" style=\"width:100%\">\r\n");
      out.write("  	</div>\r\n");
      out.write("   	<div class=\"col-md-6\">\r\n");
      out.write("  		\r\n");
      out.write("  		<h3>");
      out.print(p.getPname() );
      out.write("</h3>\r\n");
      out.write("  		<p>");
      out.print(p.getDescription() );
      out.write("</p>\r\n");
      out.write("  		<p><b>상품코드 :</b><span class=\"badge badge-danger\">");
      out.print(p.getProductId() );
      out.write("</span> \r\n");
      out.write("  		<p><b>제조사 : </b><span class=\"badge badge-primary\">");
      out.print(p.getManufacturer() );
      out.write("</span>\r\n");
      out.write("  		<p><b>분류 : </b><sapn class=\"badge badbe-pill badge-dark\">");
      out.print(p.getCategory() );
      out.write("</sapn>\r\n");
      out.write("  		<p><b>재고수: </b><span class=\"badge badge-pill badge-danger\">");
      out.print(p.getUnitsInStock() );
      out.write("</span>\r\n");
      out.write("  		<h4>");
      out.print(p.getUnitPrice() );
      out.write(" 원</h4>\r\n");
      out.write("  		");
      out.write("\r\n");
      out.write("  		<form name=\"addForm\" action=\"./addCart.jsp?id=");
      out.print(p.getProductId() );
      out.write("\" method=\"post\">\r\n");
      out.write(" 	  		<p><a href=\"#\" class=\"btn btn-info\" onclick=\"addToCart()\"> 상품주문 &raquo;</a>\r\n");
      out.write("	  		   <a href=\"./cart.jsp\" class=\"btn btn-warning\"> 장바구니 &raquo; </a>\r\n");
      out.write("	  		<p><a href=\"./products.jsp\" class=\"btn btn-secondary\"> 상품목록 &raquo;</a>\r\n");
      out.write("		</form>  		\r\n");
      out.write("  	</div>\r\n");
      out.write("  	</div>\r\n");
      out.write("  	</div>\r\n");
      out.write("  		\r\n");
      out.write("  		\r\n");
      out.write("  		\r\n");
      out.write("  		\r\n");
      out.write("  		\r\n");
      out.write("  	\r\n");
      out.write("  \r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
