/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-01-29 02:50:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.*;
import java.sql.*;

public final class modify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title> modify.jsp 수정하기 </title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  ");

  // 파라미터로 넘어온 회원번호는 문자이기때문에 기본형 정수형으로 바꾸기 
  String n1 = request.getParameter("number");
  Integer nn1 = Integer.valueOf(n1);
  int number = nn1.intValue();
    
  //1. 드라이버 로드하기
  Class.forName("com.mysql.jdbc.Driver");
  //2. con 연결하기
  String url = "jdbc:mysql://localhost:3306/webmarket?characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false";
  String userId = "root";
  String userPwd = "1234";
  Connection con = DriverManager.getConnection(url, userId, userPwd);
  //3. sql작성하기 con올리기
  String selectSql = "select * from membertbl where number = ?";
  PreparedStatement pstmt = con.prepareStatement(selectSql);
  // ? 채우기
  pstmt.setInt(1, number);
    
  //4. mysql으로 보내서 실행하기
  ResultSet rs = pstmt.executeQuery(); // select문을 실행할 때는 executeQuery()
  //rs변수에 담겨서 select문을 jsp로 들어온다. 
  
  while( rs.next() ) {
  
  
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../menu.jsp", out, false);
      out.write("\r\n");
      out.write("  <div class=\"jumbotron\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1 class=\"display-3\"> 회원 정보 수정 </h1> \r\n");
      out.write("    </div>\r\n");
      out.write("  </div> \r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("  \r\n");
      out.write("     <form action=\"processModify.jsp?number=");
      out.print( rs.getInt("number") );
      out.write("\"  name=\"join\" class=\"form-horizontal\"  method=\"post\">\r\n");
      out.write("          \r\n");
      out.write("         <div class=\"form-group row\">\r\n");
      out.write("            <label class=\"col-sm-2 f1\"> 아이디 </label>\r\n");
      out.write("            <div class=\"col-sm-4\">\r\n");
      out.write("                <input type=\"text\" name=\"id\" id=\"id\"  value=\"");
      out.print( rs.getString("id") );
      out.write(" \" placeholder=\"아이디입력\" class=\"form-control\"> \r\n");
      out.write("            </div>\r\n");
      out.write("         </div>  \r\n");
      out.write("    \r\n");
      out.write("         <div class=\"form-group row\">\r\n");
      out.write("            <label class=\"col-sm-2 f1\"> 비밀번호 </label>\r\n");
      out.write("            <div class=\"col-sm-4\">\r\n");
      out.write("                <input type=\"password\" name=\"pwd\"  id=\"pwd\"  value=\"");
      out.print( rs.getString("pwd") );
      out.write(" \"   placeholder=\"비밀번호\"  class=\"form-control\"> \r\n");
      out.write("            </div>\r\n");
      out.write("         </div> \r\n");
      out.write("         \r\n");
      out.write("          <div class=\"form-group row\">\r\n");
      out.write("            <label class=\"col-sm-2 f1\"> 이름 </label>\r\n");
      out.write("            <div class=\"col-sm-4\">\r\n");
      out.write("                <input type=\"text\" name=\"name\" id=\"name\"  value=\"");
      out.print( rs.getString("name") );
      out.write(" \"   placeholder=\"이름입력\" class=\"form-control\"> \r\n");
      out.write("            </div>\r\n");
      out.write("         </div> \r\n");
      out.write("         \r\n");
      out.write("         <div class=\"form-group row\">\r\n");
      out.write("            <label class=\"col-sm-2 f1\"> 이메일 </label>\r\n");
      out.write("            <div class=\"col-sm-4\">\r\n");
      out.write("                <input type=\"text\" name=\"email\" id=\"email\" value=\"");
      out.print( rs.getString("email") );
      out.write(" \" placeholder=\"이메일입력\" class=\"form-control\"> \r\n");
      out.write("            </div>\r\n");
      out.write("         </div>  \r\n");
      out.write("                 \r\n");
      out.write("         <div class=\"form-group row\">\r\n");
      out.write("            <div class=\"col-sm-offset-2  col-sm-8  col  text-center\">\r\n");
      out.write("                <input type=\"submit\"  class=\"btn btn-primary f1\" value=\"회원정보수정\"> \r\n");
      out.write("                <input type=\"reset\" class=\"btn btn-secondary f1\" value=\"취소\">  \r\n");
      out.write("            </div>\r\n");
      out.write("         </div> \r\n");
      out.write(" \r\n");
      out.write("    </form>\r\n");
      out.write(" \r\n");
      out.write("  </div>\r\n");
      out.write("  ");

  }
  
      out.write("\r\n");
      out.write("    \r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer.jsp", out, false);
      out.write("\r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
