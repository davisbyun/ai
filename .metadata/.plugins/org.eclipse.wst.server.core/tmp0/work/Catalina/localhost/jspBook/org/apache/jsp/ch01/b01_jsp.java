/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-01-16 08:25:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch01;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class b01_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 int count = 3;
		String makeItLower(String data) {
			return data.toLowerCase();
		}
	
 int count1 = 0; // 자바주석 변수선언

		int sum(int a, int b) {
		return a+b ; }; 
	
 int ga = 10; 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>Hello JSP </h1>\r\n");
      out.write("	<h2>Scripting Tag</h2>\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');

		for(int i=1; i<=count ; i++){
			out.println(i + "<br>");
		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print( makeItLower("Hi!") );
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');
 out.println(++count1); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 String name = "홍길동";
		out.println(name);
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print( name );
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print( count1 );
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("	\r\n");
      out.write("	");

		
		int aa = sum(10,20);
		out.println(aa);
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print( aa );
      out.write("\r\n");
      out.write("	<br>\r\n");
      out.write("	");

		int a = 2;
		int b = 3;
		int sum = a+b;
		out.println("2+3 =  " +sum);
	
      out.write("\r\n");
      out.write("	<br>\r\n");
      out.write("	\r\n");
      out.write("	");

	
		for(int i = 0; i <= 10; i++) {
			if(i % 2 == 0)
				out.println(i + "<br>");
			}
	
      out.write("\r\n");
      out.write("	<br>\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');
 out.println(ga); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 int la = 100; 
		out.println(ga +la); // ga변수 가 ;la변수 가
	
      out.write("\r\n");
      out.write("	<br>\r\n");
      out.write("	");

		out.println(ga +la);
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write(" \r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("<br>\r\n");
      out.write("<table class=\"table table-dark\">\r\n");
      out.write("  <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"col\">번호</th>\r\n");
      out.write("      <th scope=\"col\">제목</th>\r\n");
      out.write("      <th scope=\"col\">내용</th>\r\n");
      out.write("      <th scope=\"col\">작성자</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </thead>\r\n");
      out.write("  <tbody>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"row\">1</th>\r\n");
      out.write("      <td>Mark</td>\r\n");
      out.write("      <td>Otto</td>\r\n");
      out.write("      <td>@mdo</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"row\">2</th>\r\n");
      out.write("      <td>Jacob</td>\r\n");
      out.write("      <td>Thornton</td>\r\n");
      out.write("      <td>@fat</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"row\">3</th>\r\n");
      out.write("      <td>Larry</td>\r\n");
      out.write("      <td>the Bird</td>\r\n");
      out.write("      <td>@twitter</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </tbody>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
